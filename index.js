require('dotenv').config();

const fs = require('fs');
const path = require('path');
const { Bot, InlineKeyboard, Keyboard } = require('grammy'); 
const bot = new Bot(process.env.BOT_TOKEN); 
const ADMIN_ID = Number(process.env.ADMIN_ID);
const lapsikiFile = path.join(__dirname, 'lapsiki.json');

let userLapsiki = fs.existsSync(lapsikiFile)
  ? JSON.parse(fs.readFileSync(lapsikiFile, 'utf8'))
  : {};

function saveLapsiki() {
  fs.writeFileSync(lapsikiFile, JSON.stringify(userLapsiki, null, 2));
}
function getLapsiki(userId) {
  return userLapsiki[userId] || 0;
}
function addLapsiki(userId, amount) {
  userLapsiki[userId] = getLapsiki(userId) + amount;
  saveLapsiki();
}
function spendLapsiki(userId, amount) {
  if (getLapsiki(userId) < amount) return false;
  userLapsiki[userId] -= amount;
  saveLapsiki();
  return true;
}
// –∫–æ–º–∞–Ω–¥–∞ /—Å–ø–∏—Å–∞—Ç—å–ª–∞–ø—Å–∏–∫–∏ 
const BOYFRIEND_ID = 1189007223;
bot.command('—Å–ø–∏—Å–∞—Ç—å–ª–∞–ø—Å–∏–∫–∏', async (ctx) => {
  const amount = Number(ctx.message.text.split(' ')[1]); // —Ç–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º
  if (isNaN(amount) || amount <= 0) {
    return ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: /—Å–ø–∏—Å–∞—Ç—å–ª–∞–ø—Å–∏–∫–∏ 10');
  }
  if (!spendLapsiki(BOYFRIEND_ID, amount)) {
    return ctx.reply('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∞–ø—Å–∏–∫–æ–≤!');
  }
  await ctx.reply(`–°–ø–∏—Å–∞–Ω–æ ${amount} –ª–∞–ø—Å–∏–∫–æ–≤ —É —Ç–≤–æ–µ–≥–æ –ø–∞—Ä–Ω—è`);
  await bot.api.sendMessage(BOYFRIEND_ID, `–° –±–∞–ª–∞–Ω—Å–∞ —Å–ø–∏—Å–∞–Ω–æ ${amount} –ª–∞–ø—Å–∏–∫–æ–≤ –∑–∞ –∑–∞–∫–∞–∑ –≤ –ù–µ–∂–Ω–æ–º–∞—Ä–∫–µ—Ç–µ!`);
});

// –∫–æ–º–∞–Ω–¥–∞ –Ω–∞—á–∏—Å–ª–∏—Ç—å–ª–∞–ø—Å–∏–∫–∏ 

bot.command('–Ω–∞—á–∏—Å–ª–∏—Ç—å–ª–∞–ø—Å–∏–∫–∏', async (ctx) => {
  const amount = Number(ctx.message.text.split(' ')[1]); // —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ ‚Äî —Å–∫–æ–ª—å–∫–æ –Ω–∞—á–∏—Å–ª–∏—Ç—å
  if (isNaN(amount) || amount <= 0) {
    return ctx.reply('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: /–Ω–∞—á–∏—Å–ª–∏—Ç—å–ª–∞–ø—Å–∏–∫–∏ 10');
  }
  addLapsiki(BOYFRIEND_ID, amount); // —Ç–≤–æ—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–ª–æ–≤
  await ctx.reply(`–ù–∞—á–∏—Å–ª–µ–Ω–æ ${amount} –ª–∞–ø—Å–∏–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (id=${BOYFRIEND_ID})`);
  await bot.api.sendMessage(BOYFRIEND_ID, `–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ ${amount} –ª–∞–ø—Å–∏–∫–æ–≤!`);
});


// ---- –°–æ—Å—Ç–æ—è–Ω–∏—è (–í–°–ï –≤ –Ω–∞—á–∞–ª–µ!) ----
let waitingForDream = {};
let waitingForFeedback = {};
let waitingForPost = false;
let userMenuState = {};


// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err) => {
  console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –±–æ—Ç–∞:', err);
});
process.on('unhandledRejection', (reason) => {
  console.error('üî¥ Unhandled Rejection:', reason);
});
process.on('uncaughtException', (err) => {
  console.error('üî¥ Uncaught Exception:', err);
});

// === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ¬†===
const mainKeyboard = new Keyboard()
  .text('–ë–µ—Å–ø–ª–∞—Ç–Ω–æüíì').text('–ü–ª–∞—Ç–Ω–æü´∞').row()
  .text('–°–¥–µ–ª–∞—Ç—å –ø—Ä–∏—è—Ç–Ω–æ –°–∞—à–µ üíå').row()
  .text('–ú–æ–π –±–∞–ª–∞–Ω—Å üêæ').row()
  .text('–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ üîó').row()
  .text('–û—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –ø—Ä–æ–µ–∫—Ç–∞ ‚úçÔ∏è')
  .resized();

// === –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –æ–ø—Ü–∏–∏ ===
const freeKeyboard = new Keyboard()
  .text('–ü–æ—Ü–µ–ª—É–π S ‚òÅ').row()
  .text('–ü–æ—Ü–µ–ª—É–π L üçì').row()
  .text('–ü–æ—Ü–µ–ª—É–π XXL üòà').row()
  .text('–°—Ä–æ—á–Ω—ã–µ –æ–±–Ω–∏–º–∞—à–∫–∏ üß∏').row()
  .text('–û–±—ä—è—Ç–∏—è XL ‚ù§Ô∏è').row()
  .text('–¢–µ—Å—Ç –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (—Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π) ‚ú®').row()
  .text('–ü—Ä–æ–≥–Ω–æ–∑ –∏ —Å–æ–≤–µ—Ç –Ω–∞ –¥–µ–Ω—å ü™Ñ').row()
  .text('–ù–∞–ø–∏—Å–∞—Ç—å –º–µ—á—Ç—É (–ö–Ω–æ–ø–∫–∞ –∑–∞—Ä—è–∂–µ–Ω–∞ —ç–Ω–µ—Ä–≥–∏–µ–π –Ω–∞ –µ—ë –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ) üí´').row()
  .text('üîô –ù–∞–∑–∞–¥')
  .resized();

// === –ü–ª–∞—Ç–Ω—ã–µ –æ–ø—Ü–∏–∏ ¬†===
const paidKeyboard = new Keyboard()
  .text('–ó–∞–≤–∞—Ä–∏—Ç—å —á–∞–π/–∫–æ—Ñ–µ ‚òïü´ñ').row()
  .text('–ë—ã—Å—Ç—Ä—ã–π –≤–∫—É—Å–Ω—ã–π –ø–µ—Ä–µ–∫—É—Å ü•ê').row()
  .text('–ú–∞—Å—Å–∞–∂ üíÜ').row()
  .text('–ú–µ–º—á–∏–∫ üêí').row()
  .text('üîô –ù–∞–∑–∞–¥')
  .resized();

const sashaKeyboard = new Keyboard()
  .text('–ü—Ä–∏–∑–Ω–∞—Ç—å—Å—è –≤ –ª—é–±–≤–∏ ‚ù§Ô∏è').row()
  .text('–°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è üé≤').row()
  .text('üîô –ù–∞–∑–∞–¥')
  .resized();

const moodKeyboard = new Keyboard()
  .text('–û—Ç–ª–∏—á–Ω–æ').row()
  .text('–£—Å—Ç–∞–ª').row()
  .text('–ü–µ—á–∞–ª—å–Ω–æ').row()
  .text('üîô –ù–∞–∑–∞–¥')
  .resized();

// --- –î–∞–Ω–Ω—ã–µ ---
const memeIndexFile = path.join(__dirname, 'meme_index.json');
const adviceCooldownFile = path.join(__dirname, 'daily_advice.json');
const dreamsFile = path.join(__dirname, 'dreams.json');

let userDreams = fs.existsSync(dreamsFile)
  ? JSON.parse(fs.readFileSync(dreamsFile, 'utf8'))
  : {};

function saveDreams() {
  fs.writeFileSync(dreamsFile, JSON.stringify(userDreams, null, 2));
}

let userMemeIndex = fs.existsSync(memeIndexFile)
  ? JSON.parse(fs.readFileSync(memeIndexFile, 'utf8'))
  : {};

function saveMemeIndex() {
  fs.writeFileSync(memeIndexFile, JSON.stringify(userMemeIndex, null, 2));
}

let userAdviceTimestamps = fs.existsSync(adviceCooldownFile)
  ? JSON.parse(fs.readFileSync(adviceCooldownFile, 'utf8'))
  : {};

function saveAdviceTimestamps() {
  fs.writeFileSync(adviceCooldownFile, JSON.stringify(userAdviceTimestamps, null, 2));
}

const memePhotos = [
  'AgACAgIAAxkBAAPCaGjbFcVkDdfrkOVyMVzHs1xtDHEAAs7zMRsfj0hLcRah7yXIqmcBAAMCAAN4AAM2BA',
  'AgACAgIAAxkBAAPEaGjbN4perbA3ufmQs7vI3vI5u6wAAs_zMRsfj0hLUFgtq22NrUEBAAMCAAN4AAM2BA',
  'AgACAgIAAxkBAAPGaGjbVR96z4cluSJ-V0njKK0vrZIAAtHzMRsfj0hLl9XXoElGDokBAAMCAAN4AAM2BA',
  'AgACAgIAAxkBAAPKaGjbm9EZi1Zswp-2K6N6VUt-uZgAAtbzMRsfj0hL85IfFAW7GUoBAAMCAAN4AAM2BA',
  'AgACAgIAAxkBAAPMaGjbtQ0hNLzvq_hKWXvU5ISYAtkAAtrzMRsfj0hL9d1QT_O9i7MBAAMCAAN4AAM2BA',
  'AgACAgIAAxkBAAPOaGjb0XhKGijQ10qvtK4mbHQOU3UAAqDyMRu0nElLvzjPng13ZxkBAAMCAAN4AAM2BA'
];

// --- –¶–∏–∫–ª –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ---
function getCyclePhase() {
  const startDate = new Date(process.env.CYCLE_START_DATE);
  const cycleLength = Number(process.env.CYCLE_LENGTH || 28);
  const today = new Date();
  const daysPassed = Math.floor((today - startDate) / (1000 * 60 * 60 * 24));
  const dayInCycle = daysPassed % cycleLength;

  if (dayInCycle >= 0 && dayInCycle <= 4) return 'menstruation';
  if (dayInCycle >= 5 && dayInCycle <= 11) return 'follicular';
  if (dayInCycle >= 12 && dayInCycle <= 14) return 'ovulation';
  if (dayInCycle >= 15 && dayInCycle <= 24) return 'luteal';
  if (dayInCycle >= 25 && dayInCycle <= 27) return 'pms';
  return 'unknown';
}

const phaseMessages = {
  menstruation: 'ü©∏ –£ –°–∞—à–∏ –º–µ—Å—è—á–Ω—ã–µ. –°–∞–º–æ–µ –≤—Ä–µ–º—è –∑–∞–±–æ—Ç—ã, —É—é—Ç–∞ –∏ —á–∞—è —Å —á–µ–º-—Ç–æ –≤–∫—É—Å–Ω—ã–º ‚òïüßÅ',
  follicular: 'üå± –§–µ—Ä—Ç–∏–ª—å–Ω–æ–µ –æ–∫–Ω–æ. –£ –°–∞—à–∏ –ø—Ä–∏–ª–∏–≤ —Å–∏–ª –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∏ –µ—ë –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!',
  ovulation: 'üí´ –°–µ–≥–æ–¥–Ω—è –æ–≤—É–ª—è—Ü–∏—è! –°–∞—à–∞ –æ—Å–æ–±–µ–Ω–Ω–æ –æ–±–∞—è—Ç–µ–ª—å–Ω–∞ –∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ ‚Äî –±—É–¥—å –æ—Å–æ–±–µ–Ω–Ω–æ –≤–Ω–∏–º–∞—Ç–µ–ª–µ–Ω ‚ù§Ô∏è',
  luteal: 'üåô –õ—é—Ç–µ–∞–ª—å–Ω–∞—è —Ñ–∞–∑–∞. –í–æ–∑–º–æ–∂–Ω—ã —Ä–µ–∑–∫–∏–µ –ø–µ—Ä–µ–ø–∞–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–∞!',
  pms: '‚ö†Ô∏è –°–∫–æ—Ä–æ –º–µ—Å—è—á–Ω—ã–µ. –ú–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —É—Å—Ç–∞–ª–æ—Å—Ç—å ‚Äî –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω—ã –±–µ—Ä–µ–∂–Ω–æ—Å—Ç—å –∏ –æ–±–Ω–∏–º–∞—à–∫–∏ üß∏'
};

async function sendCycleNotification() {
  const phase = getCyclePhase();
  const message = phaseMessages[phase];
  if (message) {
    await bot.api.sendMessage(ADMIN_ID, `üîî –¶–∏–∫–ª: ${message}`);
    await bot.api.sendMessage(1189007223, `üîî –¶–∏–∫–ª: ${message}`); // –î–æ–ø. ID
  }
}

// --- –•–µ–Ω–¥–ª–µ—Ä—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä ---

bot.command('start', async (ctx) => {
  await ctx.replyWithAnimation('CgACAgIAAxkBAAORaGjGMi2dp6DzsgZN-ccqxMOFA5IAAgV1AAIfj0hLA9gAARgwJwhCNgQ');
  await ctx.reply(
    '–ü—Ä–∏–≤–µ—Ç, –ª—é–±–∏–º–∫–∞! üíì –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å, —á—Ç–æ —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –∞ —è –ø—Ä–æ—Å—Ç–æ —Å–¥–µ–ª–∞—é —ç—Ç–æ ‚ú® üëâüëà –¢–∞–∫–∏–º —Å–ø–æ—Å–æ–±–æ–º —è —Ö–æ—á—É –≤—ã—Ä–∞–∑–∏—Ç—å —Å–≤–æ—é –ª—é–±–æ–≤—å –∫ —Ç–µ–±–µ üíì –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —É—Å–ª—É–≥–∏ –ø–ª–∞—Ç–Ω—ã–µ üòâ',
    { reply_markup: mainKeyboard }
  );
});
bot.hears('–ú–æ–π –±–∞–ª–∞–Ω—Å üêæ', async (ctx) => {
  const balance = getLapsiki(ctx.from.id);
  await ctx.reply(`–¢–≤–æ–π —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${balance} –ª–∞–ø—Å–∏–∫–∞(–æ–≤) üêæ`);
});


bot.hears('–ë–µ—Å–ø–ª–∞—Ç–Ω–æüíì', async (ctx) => {
  userMenuState[ctx.from.id] = 'main';
  await ctx.reply('–í—ã–±–∏—Ä–∞–π:', { reply_markup: freeKeyboard });
});

bot.hears('–ü–ª–∞—Ç–Ω–æü´∞', async (ctx) => {
  userMenuState[ctx.from.id] = 'main';
  await ctx.reply('–í–æ—Ç –ø–ª–∞—Ç–Ω—ã–µ –æ–ø—Ü–∏–∏, –º–∏–ª–∞—à–∫–∞ üòò', { reply_markup: paidKeyboard });
});

bot.hears('–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ üîó', async (ctx) => {
  await ctx.reply('–í–æ—Ç —á—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–µ–±–µ –ø–æ–ª–µ–∑–Ω–æ ü´∂:', {
    reply_markup: new InlineKeyboard()
      .url('üå∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–∑–∞—Ö –º–æ–µ–≥–æ —Ü–∏–∫–ª–∞',
        'https://docs.google.com/document/d/14hiIuIbMan3o3tgH4n1rNd40ujKu3MLSoXnqwnsUM2w/edit?usp=sharing'
      )
  });
});

const catalogLink = "https://admin.webbot.shop/shop/271d025c-d4c9-4505-9b75-92d17c969f3b"; // –ü–æ–¥—Å—Ç–∞–≤—å —Å–≤–æ–π URL


bot.hears('–û—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –ø—Ä–æ–µ–∫—Ç–∞ ‚úçÔ∏è', async (ctx) => {
  waitingForFeedback[ctx.from.id] = true;
  await ctx.reply('‚úçÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ —Å–≤–æ–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –ø—Ä–æ–µ–∫—Ç–∞. –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å, –Ω–∞–ø–∏—à–∏ "–æ—Ç–º–µ–Ω–∞".');
});

bot.hears('–°–¥–µ–ª–∞—Ç—å –ø—Ä–∏—è—Ç–Ω–æ –°–∞—à–µ üíå', async (ctx) => {
  await ctx.reply(
    `–ó–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π —Ç–µ–±–µ –±—É–¥—É—Ç –Ω–∞—á–∏—Å–ª—è—Ç—å—Å—è –±–∞–ª–ª—ã ‚Äî *–õ–∞–ø—Å–∏–∫–∏ üêæ*\n` +
    `–ò—Ö –º–æ–∂–Ω–æ –Ω–∞–∫–æ–ø–∏—Ç—å –∏ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ —É—Å–ª—É–≥—É –ø–æ –≤—ã–±–æ—Ä—É –≤ –º–æ–µ–º –º–∞–≥–∞–∑–∏–Ω–µ ‚Äî *–ù–µ–∂–Ω–æ–º–∞—Ä–∫–µ—Ç* üêá\n\n` +
    `–ú–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ –≤ –ª—é–±–≤–∏ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å–º–æ–∂–µ—Ç –º–µ–Ω—è –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å. –û–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω—ã–º –≤—ã–±–æ—Ä–æ–º ‚ú®`,
    { parse_mode: 'Markdown', reply_markup: sashaKeyboard }
  );
});

bot.hears('–ü—Ä–∏–∑–Ω–∞—Ç—å—Å—è –≤ –ª—é–±–≤–∏ ‚ù§Ô∏è', async (ctx) => {
  const user = ctx.from;
  // –ü–∞—Ä–Ω—é: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª—é–±–≤–∏ –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞
  await ctx.reply(
    '–¢–≤–æ—è –ª—é–±–æ–≤—å –±—É–¥–µ—Ç —É—Å–ª—ã—à–∞–Ω–∞! üíñ\n\nüí° –ó–∞ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å 3 –ª–∞–ø—Å–∏–∫–∞ üêæ.\n\n–ù–∞–ø–∏—à–∏ –º–Ω–µ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É!'
  );
  // –¢–µ–±–µ: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π –æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –ª–∞–ø—Å–∏–∫–æ–≤
  await bot.api.sendMessage(
    ADMIN_ID,
    `üì© –í–ª–∞–¥ –ø—Ä–∏–∑–Ω–∞–ª—Å—è —Ç–µ–±–µ –≤ –ª—é–±–≤–∏ ‚ù§Ô∏è\n–ò–º—è: ${user.first_name}\n–Æ–∑–µ—Ä–Ω–µ–π–º: @${user.username || '–±–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞'}\n\n‚ûï –ó–∞ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥–æ –≤—Ä—É—á–Ω—É—é –Ω–∞—á–∏—Å–ª–∏—Ç—å 3 –ª–∞–ø—Å–∏–∫–∞.`
  );
});


bot.hears('–°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è üé≤', async (ctx) => {
  const actions = [
    {text:'*"–ü–æ–π–º–∞–π –º–æ–º–µ–Ω—Ç"* üíå - –ü–æ–¥–æ–π–¥–∏ –∫ –°–∞—à–µ, –∫–æ–≥–¥–∞ –æ–Ω–∞ –Ω–µ –∂–¥—ë—Ç, –∏ –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–∏–º–∏.' , reward: 2},
    {text:'*"–¢–∞–Ω–µ—Ü –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã"*üíÉüï∫üíì - –ü—Ä–∏–≥–ª–∞—Å–∏ –°–∞—à—É –Ω–∞ —Ç–∞–Ω–µ—Ü (–¥–∞–∂–µ –¥–æ–º–∞). –≠—Ç–æ –±—É–¥–µ—Ç –∑–∞–±–∞–≤–Ω–æ –∏ –º–∏–ª–æ.', reward: 4},
    {text:'*"–ú–∏—Å—Å–∏—è: –º–µ–º"* - –°—Ä–æ—á–Ω–æ –Ω–∞–π–¥–∏ —Å–º–µ—à–Ω–æ–π –º–µ–º –∏ –æ—Ç–ø—Ä–∞–≤—å –°–∞—à–µ, —É —Ç–µ–±—è 20 –º–∏–Ω—É—Ç –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.', reward: 2},
    {text:'*"–†–µ–∂–∏–º –∑–∞–π—á–∏–∫–∞"* üê∞ - –í—Å—ë, —á—Ç–æ —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å –°–∞—à–µ, –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å "–°–∞—à–µ–Ω—å–∫–∞ –ª—é–±–∏–º–∞—è..." –≤ —Ç–µ—á–µ–Ω–∏–µ 5 —á–∞—Å–æ–≤.', reward: 6},
    {text:'*"–¶–µ–ª–µ–≤–æ–π –ø–æ—Ü–µ–ª—É–π"* üíã - –ü–æ—Ü–µ–ª—É–π –°–∞—à—É –≤ 5 —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç –Ω–∞ —Å–≤–æ—ë —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.', reward: 5}
  ];
  const random = actions[Math.floor(Math.random() * actions.length)];
  // –ü–∞—Ä–Ω—é: –≥–æ–≤–æ—Ä–∏–º, —Å–∫–æ–ª—å–∫–æ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è, –Ω–æ –±–∞–ª–ª—ã –ù–ï –Ω–∞—á–∏—Å–ª—è–µ–º!
  await ctx.reply(`–í–æ—Ç —Ç–≤–æ—ë –¥–µ–π—Å—Ç–≤–∏–µ:\n${random.text}\n\nüí° –ó–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å ${random.reward} –ª–∞–ø—Å–∏–∫–∞(–æ–≤) üêæ\n\n–°–æ–æ–±—â–∏ –º–Ω–µ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É!`);
  // –¢–µ–±–µ: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å "–ø–æ–¥—Å–∫–∞–∑–∫–æ–π", —Å–∫–æ–ª—å–∫–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–æ
  await bot.api.sendMessage(
    ADMIN_ID,
    `üé≤ –°–ª—É—á–∞–π–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –ø–∞—Ä–Ω—è:\n${random.text}\n\n‚ûï –ó–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω—É–∂–Ω–æ –≤—Ä—É—á–Ω—É—é –Ω–∞—á–∏—Å–ª–∏—Ç—å ${random.reward} –ª–∞–ø—Å–∏–∫–∞(–æ–≤).`
  );
});

bot.hears('–ù–∞–ø–∏—Å–∞—Ç—å –º–µ—á—Ç—É (–ö–Ω–æ–ø–∫–∞ –∑–∞—Ä—è–∂–µ–Ω–∞ —ç–Ω–µ—Ä–≥–∏–µ–π –Ω–∞ –µ—ë –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ) üí´', async (ctx) => {
  const userId = ctx.from.id;
  waitingForDream[userId] = true;
  await ctx.reply('ü§´ –ù–∞–ø–∏—à–∏ —Å–≤–æ—é –º–µ—á—Ç—É. –û–Ω–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–æ –≤—Å–µ–ª–µ–Ω–Ω—É—é –∏ —Ç–æ—á–Ω–æ –∏—Å–ø–æ–ª–Ω–∏—Ç—Å—è üí´ –≠—Ç–æ –∞–Ω–æ–Ω–∏–º–Ω–æ, –Ω–∏–∫—Ç–æ –Ω–µ —É–∑–Ω–∞–µ—Ç, —á—Ç–æ —Ç—ã –∑–∞–≥–∞–¥–∞–ª üíì –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–æ–¥–∞ –º–µ—á—Ç—ã –Ω–∞–ø–∏—à–∏ –ø—Ä–æ—Å—Ç–æ "–æ—Ç–º–µ–Ω–∞"');
});

bot.hears('üîô –ù–∞–∑–∞–¥', async (ctx) => {
  await ctx.reply('üå∏ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', { reply_markup: mainKeyboard });
});

// --- –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ ("free") —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ —Å–ø–∏—Å–∫—É –∫–Ω–æ–ø–æ–∫ ---
const freeOptions = [
  '–ü–æ—Ü–µ–ª—É–π S ‚òÅ',
  '–ü–æ—Ü–µ–ª—É–π L üçì',
  '–ü–æ—Ü–µ–ª—É–π XXL üòà',
  '–°—Ä–æ—á–Ω—ã–µ –æ–±–Ω–∏–º–∞—à–∫–∏ üß∏',
  '–û–±—ä—è—Ç–∏—è XL ‚ù§Ô∏è',
  '–¢–µ—Å—Ç –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (—Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π) ‚ú®',
  '–ü—Ä–æ–≥–Ω–æ–∑ –∏ —Å–æ–≤–µ—Ç –Ω–∞ –¥–µ–Ω—å ü™Ñ'
];

const moodResponses = {
  '–û—Ç–ª–∏—á–Ω–æ': [
    '–û—Å—Ç–∞–Ω–æ–≤–∏—Å—å –Ω–∞ –º–∏–Ω—É—Ç—É –∏ –ø—Ä–æ—Å—Ç–æ –ø–æ—á—É–≤—Å—Ç–≤—É–π: ¬´–ú–Ω–µ —Ö–æ—Ä–æ—à–æ¬ª. –≠—Ç–æ –≤–µ–¥—å —Ç–∞–∫ –≤–∞–∂–Ω–æ! ‚òÄÔ∏è',
    '–ü–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º ‚Äî –≤–µ—Ä–Ω—ë—Ç—Å—è –≤–¥–≤–æ–π–Ω–µ ‚ú®',
    '–ó–∞–∫—Ä–æ–π –≥–ª–∞–∑–∞ –∏ –∑–∞–ø–æ–º–Ω–∏ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç. –û–Ω —Å—Ç–∞–Ω–µ—Ç —Ç–≤–æ–∏–º –ª–∏—á–Ω—ã–º —è–∫–æ—Ä–µ–º —Å—á–∞—Å—Ç—å—è üçÄ',
    '–•–æ—á–µ—à—å –µ—â—ë –±–æ–ª—å—à–µ —Ä–∞–¥–æ—Å—Ç–∏? –ü–æ–¥—É–º–∞–π, –∑–∞ —á—Ç–æ —Ç—ã –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å ü™ê'
  ],
  '–£—Å—Ç–∞–ª': [
    '–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ª–µ–∂–∏—à—å –≤ —Ç—Ä–∞–≤–µ, –∏ –Ω–∞–¥ —Ç–æ–±–æ–π –ø–ª—ã–≤—É—Ç –æ–±–ª–∞–∫–∞. –ü—Ä–æ—Å—Ç–æ –ø–æ–±—É–¥—å —Ç–∞–º üåø',
    '–°–¥–µ–ª–∞–π —Å–µ–±–µ —Ç—ë–ø–ª—ã–π —á–∞–π (–∏–ª–∏ –∑–∞–∫–∞–∂–∏ –ø—Ä—è–º–æ –∑–¥–µ—Å—å üòâ). –ü–æ—Å—Ç–∞–≤—å –Ω–∞ –ø–∞—É–∑—É. –ú–∏—Ä –ø–æ–¥–æ–∂–¥—ë—Ç. ‚òï',
    '–°–¥–µ–ª–∞–π –≤–¥–æ—Ö –Ω–∞ 4 —Å–µ–∫—É–Ω–¥—ã, –∑–∞–¥–µ—Ä–∂–∏ –Ω–∞ 4 —Å–µ–∫—É–Ω–¥—ã, –∑–∞—Ç–µ–º –≤—ã–¥–æ—Ö–Ω–∏ –∑–∞ 6 —Å–µ–∫—É–Ω–¥. –ü–æ–≤—Ç–æ—Ä–∏ 5 —Ä–∞–∑. –ú–µ–¥–ª–µ–Ω–Ω–æ... —Å–ø–æ–∫–æ–π–Ω–æ... üå¨Ô∏è'
  ],
  '–ü–µ—á–∞–ª—å–Ω–æ': [
    '–¢—ã –Ω–µ –æ–¥–∏–Ω, —è –∑–¥–µ—Å—å, —Å —Ç–æ–±–æ–π. –í—Å–µ–≥–¥–∞ ‚ù§Ô∏è. –ü–æ–ø—ã—Ç–∞–π—Å—è –ø–æ–¥—É–º–∞—Ç—å. —á—Ç–æ —É–∂–µ —Ö–æ—Ä–æ—à–µ–≥–æ —Å —Ç–æ–±–æ–π –ø—Ä–æ–∏–∑–æ—à–ª–æ –∏ —á–µ–≥–æ —Ç—ã –¥–æ—Å—Ç–∏–≥ ‚òÄ. –ò –ø–æ–º–Ω–∏, —Ç—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º —Ç—ã –¥—É–º–∞–µ—à—å. –ò –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ —É–¥–∞—á–ª–∏–≤—ã–π üçÄ‚ú®',
    '–ü–æ–ø—Ä–æ–±—É–π —É–ª—ã–±–Ω—É—Ç—å—Å—è, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ –æ—á–µ–Ω—å —Ö–æ—á–µ—Ç—Å—è - —ç—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —ç–º–æ—Ü–∏–∏ ‚òÄ‚ù§Ô∏è',
    '–ü–µ—á–∞–ª—å - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –ü–æ–∑–≤–æ–ª—å —Å–µ–±–µ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –µ—ë, –∞ —è –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å –Ω–∞–π—Ç–∏ —Ç–µ–±–µ —Å–≤–µ—Ç (–µ—Å–ª–∏ —Ö–æ—á–µ—à—å, –º–æ–∂–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–æ –º–Ω–æ–π —Å–≤–æ–∏–º–∏ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è–º–∏). –¢—ã –Ω–µ –æ–¥–∏–Ω üíìüë©‚Äç‚ù§Ô∏è‚Äçüíã‚Äçüë®',
    '–°–¥–µ–ª–∞–π –≤–¥–æ—Ö –Ω–∞ 4 —Å–µ–∫—É–Ω–¥—ã, –∑–∞–¥–µ—Ä–∂–∏ –Ω–∞ 4 —Å–µ–∫—É–Ω–¥—ã, –∑–∞—Ç–µ–º –≤—ã–¥–æ—Ö–Ω–∏ –∑–∞ 6 —Å–µ–∫—É–Ω–¥. –ü–æ–≤—Ç–æ—Ä–∏ 5 —Ä–∞–∑. –ú–µ–¥–ª–µ–Ω–Ω–æ... —Å–ø–æ–∫–æ–π–Ω–æ... üå¨Ô∏è'
  ]
};

for (const option of freeOptions) {
  bot.hears(option, async (ctx) => {
    userMenuState[ctx.from.id] = 'free';
    const choice = ctx.message.text;
    switch (choice) {
      case '–ü–æ—Ü–µ–ª—É–π S ‚òÅ':
        await ctx.reply('–¢—ã –≤—ã–±—Ä–∞–ª –Ω–µ–∂–Ω—ã–π –∞–∫–∫—É—Ä–∞—Ç–Ω—ã–π üíã—á–º–æ–∫üíã –û–∂–∏–¥–∞–π! ‚ú®');
        await notifyAdmin(ctx, choice);
        break;
      case '–ü–æ—Ü–µ–ª—É–π L üçì':
        await ctx.reply('–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Å—è... –°–∞–º—ã–π —Å–æ—á–Ω—ã–π —Å—Ç—Ä–∞—Å—Ç–Ω—ã–π –ø–æ—Ü–µ–ª—É–π –¥–ª—è —Ç–µ–±—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å üíã');
        await notifyAdmin(ctx, choice);
        break;
      case '–ü–æ—Ü–µ–ª—É–π XXL üòà':
        await ctx.replyWithPhoto('AgACAgIAAxkBAAOzaGjN0kS0tzJpqSXRW5_9waCvhfcAAuT3MRuABEhLR1K5SGOpWEkBAAMCAAN4AAM2BA');
        await notifyAdmin(ctx, choice);
        await ctx.reply('–ù—É —á—Ç–æ –∂... üí¶ –î–æ—Å—Ç–∞–≤–∞–π —Å–≤–æ–π –æ–≥—Ä–æ–º–Ω—ã–π üçå');
        break;
      case '–°—Ä–æ—á–Ω—ã–µ –æ–±–Ω–∏–º–∞—à–∫–∏ üß∏':
        await ctx.reply('–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –æ–±—ä—è—Ç–∏–π —É–∂–µ —Å–ø–µ—à–∏—Ç –∫ —Ç–µ–±–µ! üß∏üí´');
        await notifyAdmin(ctx, choice);
        break;
      case '–û–±—ä—è—Ç–∏—è XL ‚ù§Ô∏è':
        await ctx.reply('–ù–µ–∂–Ω—ã–µ, –æ–±–≤–æ–ª–∞–∫–∏–≤–∞—é—â–∏–µ, —Å –∑–∞–ø–∞—Å–æ–º –ª—é–±–≤–∏ ‚ù§Ô∏èü§ó');
        await notifyAdmin(ctx, choice);
        break;
      case '–¢–µ—Å—Ç –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (—Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π) ‚ú®':
        await ctx.reply('–ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å?', { reply_markup: moodKeyboard });
        break;
      case '–ü—Ä–æ–≥–Ω–æ–∑ –∏ —Å–æ–≤–µ—Ç –Ω–∞ –¥–µ–Ω—å ü™Ñ':
        {
          const userId = ctx.from.id.toString();
          const now = Date.now();
          const last = userAdviceTimestamps[userId];

          if (last && now - last < 86400000) {
            const hoursLeft = Math.ceil((86400000 - (now - last)) / (60 * 60 * 1000));
            return ctx.reply(`üåô –¢—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª —Å–æ–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ ${hoursLeft} —á.`);
          }

          const adviceList = [
            '–°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å –±—É–¥–µ—Ç –ø–æ–ª–æ–Ω –º–∞–ª–µ–Ω—å–∫–∏—Ö —á—É–¥–µ—Å. –ù–µ —É–ø—É—Å–∫–∞–π —à–∞–Ω—Å —É–ª—ã–±–Ω—É—Ç—å—Å—è –º–∏—Ä—É! ‚ú®',
            '–¢—ã —Å–≤–µ—Ç–∏—à—å—Å—è –∏–∑–Ω—É—Ç—Ä–∏. –ü—É—Å—Ç—å —ç—Ç–æ –±—É–¥–µ—Ç —Ç–≤–æ–∏–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–º –æ—Ä—É–∂–∏–µ–º —Å–µ–≥–æ–¥–Ω—è üí´',
            '–°–æ–ª–Ω—Ü–µ —Å–µ–≥–æ–¥–Ω—è –Ω–µ —Ç–æ–ª—å–∫–æ –≤ –Ω–µ–±–µ, –Ω–æ –∏ –≤ —Ç–µ–±–µ. –ü–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–∏–º —Ç–µ–ø–ª–æ–º ‚Äî –∏ –æ–Ω–æ –≤–µ—Ä–Ω—ë—Ç—Å—è! üåû',
            '–í–æ–∑–º–æ–∂–Ω—ã –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—è—Ç–Ω–æ—Å—Ç–∏. –ë—É–¥—å –æ—Ç–∫—Ä—ã—Ç üåà',
            '–£–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –¥–µ–π—Å—Ç–≤—É–µ—à—å –º—è–≥–∫–æ, –Ω–æ —É–≤–µ—Ä–µ–Ω–Ω–æ. –ù–µ —Ç–æ—Ä–æ–ø–∏—Å—å ‚Äî –ø—Ä–æ—Å—Ç–æ –∏–¥–∏ –≤–ø–µ—Ä—ë–¥ üçÄ',
            '–°–µ–≥–æ–¥–Ω—è –ª—É—á—à–µ –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å —Å–µ–±—è ‚Äî –≤—ã–±–µ—Ä–∏ –∑–∞–±–æ—Ç—É –æ —Å–µ–±–µ. –ú–∏—Ä –ø–æ–¥–æ–∂–¥—ë—Ç. –ù–µ –∑–∞–±—É–¥—å –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –∏ –ø–æ–∫—É—à–∞—Ç—å ü•üü•ó',
            '–í—Å—ë, —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å —Å –ª—é–±–æ–≤—å—é, –ø—Ä–∏–Ω–µ—Å—ë—Ç —É–¥–∞—á—É. –°—Ñ–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ —Ö–æ—Ä–æ—à–µ–º –∏ –æ–Ω–æ –ø—Ä–∏—É–º–Ω–æ–∂–∏—Ç—Å—è ü¶ã',
            '–¢–≤–æ—è —É–ª—ã–±–∫–∞ ‚Äî –º–∞–≥–Ω–∏—Ç –¥–ª—è –¥–æ–±—Ä—ã—Ö —Å–æ–±—ã—Ç–∏–π. –ù–µ –∑–∞–±—ã–≤–∞–π –≤–∫–ª—é—á–∏—Ç—å –µ—ë —É—Ç—Ä–æ–º üíå',
            '–≠—Ç–æ—Ç –¥–µ–Ω—å –±—É–¥–µ—Ç –∫–∞–∫ –ª—ë–≥–∫–∏–π –≤–µ—Ç–µ—Ä: –Ω–µ–∂–Ω—ã–π –∏ —Å–≤–µ–∂–∏–π ‚òÅ'
          ];

          const message = adviceList[Math.floor(Math.random() * adviceList.length)];
          await ctx.reply(message);

          userAdviceTimestamps[userId] = now;
          saveAdviceTimestamps();
          await notifyAdmin(ctx, choice);
        }
        break;
    }
  });
}

// --- –ü–ª–∞—Ç–Ω—ã–µ –æ–ø—Ü–∏–∏ ---
bot.hears('–ó–∞–≤–∞—Ä–∏—Ç—å —á–∞–π/–∫–æ—Ñ–µ ‚òïü´ñ', async (ctx) => {
  userMenuState[ctx.from.id] = 'paid';
  await ctx.replyWithPhoto('AgACAgIAAxkBAAO-aGjRaZA5IBMNjLKdwPwwm7mkx14AApLzMRsfj0hL5u0B22DBZf0BAAMCAAN4AAM2BA');
  await ctx.reply('–° —Ç–µ–±—è 3 –ø–æ—Ü–µ–ª—É–π—á–∏–∫–∞ üíãüíãüíã –ß–∞–π –∏–ª–∏ –∫–æ—Ñ–µ?', {
    reply_markup: new Keyboard().text('–ß–∞–π üçµ').text('–ö–æ—Ñ–µ ‚òï').row().text('üîô –ù–∞–∑–∞–¥').resized()
  });
  await notifyAdmin(ctx, '–ó–∞–≤–∞—Ä–∏—Ç—å —á–∞–π/–∫–æ—Ñ–µ ‚òïü´ñ');
});

bot.hears('–ë—ã—Å—Ç—Ä—ã–π –≤–∫—É—Å–Ω—ã–π –ø–µ—Ä–µ–∫—É—Å ü•ê', async (ctx) => {
  userMenuState[ctx.from.id] = 'paid';
  await ctx.replyWithPhoto('AgACAgIAAxkBAAPAaGjSNVbTEQABMkxakC447CTtEtA1AAII8TEbSUdIS_LpQaRT8nNjAQADAgADeAADNgQ');
  await ctx.reply('–≠—Ç–æ —Ç–µ–±–µ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å 5 –ø–æ—Ü–µ–ª—É–π—á–∏–∫–æ–≤ üíãüíãüíãüíãüíã –í–∫—É—Å–Ω—è—à–∫–∞ –Ω–∞ –º–æ—ë —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ + –º–æ–∂–µ—Ç –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –∏–º–µ—é—â–∏—Ö—Å—è –¥–æ–º–∞ –≤ –Ω–∞–ª–∏—á–∏–∏ ü•™üç≥');
  await notifyAdmin(ctx, '–ë—ã—Å—Ç—Ä—ã–π –≤–∫—É—Å–Ω—ã–π –ø–µ—Ä–µ–∫—É—Å ü•ê');
});

bot.hears('–ú–∞—Å—Å–∞–∂ üíÜ', async (ctx) => {
  userMenuState[ctx.from.id] = 'paid';
  await ctx.reply('–°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥–∏ - 5 –ø–æ—Ü–µ–ª—É–π—á–∏–∫–æ–≤ üíãüíãüíãüíãüíã –£—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è –ø–æ—É–¥–æ–±–Ω–µ–µ... –ù–∞—á–∏–Ω–∞—é –º—è–≥–∫–∏–π —Ä–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π –º–∞—Å—Å–∞–∂ –ø–ª–µ—á –∏ —à–µ–∏ üå∏üíÜ‚Äç‚ôÄÔ∏è‚ú® –¢—ã –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞!');
  await notifyAdmin(ctx, '–ú–∞—Å—Å–∞–∂ üíÜ');
});

bot.hears('–ú–µ–º—á–∏–∫ üêí', async (ctx) => {
  userMenuState[ctx.from.id] = 'paid';
  const userId = ctx.from.id.toString();
  const index = userMemeIndex[userId] || 0;

  await ctx.replyWithPhoto(memePhotos[index]);
  await ctx.reply('–° —Ç–µ–±—è –æ–ø–ª–∞—Ç–∞ –≤ –≤–∏–¥–µ —É–ª—ã–±–∫–∏ üòä –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –µ—â—ë ‚Äî –∂–º–∏ –µ—â—ë —Ä–∞–∑!');

  userMemeIndex[userId] = (index + 1) % memePhotos.length;
  saveMemeIndex();
});

bot.hears(['–ß–∞–π üçµ', '–ö–æ—Ñ–µ ‚òï'], async (ctx) => {
  const choice = ctx.message.text;
  userMenuState[ctx.from.id] = 'paid';
  await ctx.reply('–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç! ‚ù§Ô∏è', {
    reply_markup: new Keyboard().text('üîô –ù–∞–∑–∞–¥').resized()
  });
  await notifyAdmin(ctx, `–í—ã–±—Ä–∞–Ω –Ω–∞–ø–∏—Ç–æ–∫: ${choice}`);
});

// --- –í–°–Ø —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –û–î–ù–ò–ú —Ö–µ–Ω–¥–ª–µ—Ä–æ–º ---
bot.on('message:text', async (ctx) => {
  const userId = ctx.from.id;
  const text = ctx.message.text.trim();

  // === –ú–µ—á—Ç—ã ===
  if (waitingForDream[userId]) {
    if (text.toLowerCase() === '–æ—Ç–º–µ–Ω–∞') {
      delete waitingForDream[userId];
      return await ctx.reply('‚ùå –¢—ã –æ—Ç–º–µ–Ω–∏–ª –≤–≤–æ–¥ –º–µ—á—Ç—ã. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥ üîô', {
        reply_markup: freeKeyboard
      });
    }

    const now = new Date();

    if (!userDreams[userId]) {
      userDreams[userId] = {
        startDate: now.toISOString(),
        dreams: []
      };
    }

    userDreams[userId].dreams.push(ctx.message.text);
    saveDreams();

    delete waitingForDream[userId];
    return await ctx.reply('‚ú® –ó–∞–ø—Ä–æ—Å –≤–æ –≤—Å–µ–ª–µ–Ω–Ω—É—é –ø—Ä–∏–Ω—è—Ç. –ù–∞—á–∏–Ω–∞—é—Ç—Å—è —Ä–∞–±–æ—Ç—ã –ø–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—é —Ç–≤–æ–µ–π –º–µ—á—Ç—ã...');
  }

  // === –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ ===
  if (moodResponses[text]) {
    const responses = moodResponses[text];
    const response = responses[Math.floor(Math.random() * responses.length)];
    return await ctx.reply(response, {
      reply_markup: new Keyboard().text('üîô –ù–∞–∑–∞–¥').resized()
    });
  }

  // === –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∂–µ–ª–∞–Ω–∏–π ===
  if (waitingForFeedback[ctx.from.id]) {
    if (text.toLowerCase() === '–æ—Ç–º–µ–Ω–∞') {
      delete waitingForFeedback[ctx.from.id];
      return await ctx.reply('‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ. –¢—ã –≤—ã—à–µ–ª –∏–∑ —Ä–µ–∂–∏–º–∞ –ø–æ–∂–µ–ª–∞–Ω–∏–π.');
    }

    await bot.api.sendMessage(
      ADMIN_ID,
      `üí° –ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –æ—Ç @${ctx.from.username || ctx.from.first_name}:\n\n${text}`
    );
    await ctx.reply('‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ—ë –º–Ω–µ–Ω–∏–µ! –Ø –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–º —ç—Ç–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏—Ü–µ üíì');
    delete waitingForFeedback[ctx.from.id];
    return;
  }

  // === –ü–æ—Å—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ ===
  if (ctx.from.id === ADMIN_ID && waitingForPost) {
    if (text.toLowerCase() === '–æ—Ç–º–µ–Ω–∞') {
      waitingForPost = false;
      return await ctx.reply('‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ. –¢—ã –≤—ã—à–µ–ª –∏–∑ —Ä–µ–∂–∏–º–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.');
    }

    try {
      await ctx.reply('‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è—é –ø–æ—Å—Ç...');
      await bot.api.sendMessage(1189007223, text); // –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π ID –∫–∞–Ω–∞–ª–∞
      waitingForPost = false;
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞:', err);
      await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ—Å—Ç–∞.');
    }

    return;
  }
});

// --- –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã –∏ file_id —Ö–µ–ª–ø–µ—Ä—ã ---
const notifyAdmin = async (ctx, choice) => {
  await bot.api.sendMessage(
    ADMIN_ID,
    `üîî –ù–æ–≤—ã–π –∑–∞–∫–∞–∑: ${choice} –æ—Ç @${ctx.from.username || ctx.from.first_name}`
  );
};

bot.command('post', async (ctx) => {
  if (ctx.from.id !== ADMIN_ID) return;
  waitingForPost = true;
  await ctx.reply('üìù –í–≤–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å. –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å ‚Äî –Ω–∞–ø–∏—à–∏ "–æ—Ç–º–µ–Ω–∞".');
});

bot.command('pingme', async (ctx) => {
  try {
    await bot.api.sendMessage(ADMIN_ID, 'üîî –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–µ–±–µ –≤ –ª–∏—á–∫—É!');
    await ctx.reply('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ—é –ª–∏—á–∫—É!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ –õ–°:', error);
    await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–∏—á–∫—É.');
  }
});

bot.on('message:animation', async (ctx) => {
  const fileId = ctx.message.animation.file_id;
  await ctx.reply(`file_id —ç—Ç–æ–π –≥–∏—Ñ–∫–∏: ${fileId}`);
});

bot.on('message:photo', async (ctx) => {
  const fileId = ctx.message.photo.at(-1).file_id;
  await ctx.reply(`file_id —ç—Ç–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏: ${fileId}`);
});

// --- –ö—Ä–æ–Ω-–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ ---
const cron = require('node-cron');

// –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ 8:00 —É—Ç—Ä–∞
cron.schedule('0 8 * * *', () => {
  sendCycleNotification();
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—á—Ç —á–µ—Ä–µ–∑ –ø–æ–ª–≥–æ–¥–∞
cron.schedule('0 8 * * *', async () => {
  const now = new Date();

  for (const [userId, data] of Object.entries(userDreams)) {
    if (!data.startDate || !Array.isArray(data.dreams) || data.dreams.length === 0) {
      continue;
    }

    const startDate = new Date(data.startDate);
    const halfYearLater = new Date(startDate);
    halfYearLater.setMonth(halfYearLater.getMonth() + 6);

    if (now >= halfYearLater) {
      const dreamsList = data.dreams.map((d, i) => `${i + 1}. ${d}`).join('\n');
      try {
        await bot.api.sendMessage(
          userId,
          `–ü—Ä–∏–≤–µ—Ç! üíì‚ú® –í–æ—Ç –æ —á–µ–º —Ç—ã –º–µ—á—Ç–∞–ª –∑–∞ —ç—Ç–∏ –ø–æ–ª–≥–æ–¥–∞ ü§´:\n\n${dreamsList}`
        );
        delete userDreams[userId];
        saveDreams();
      } catch (err) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ—á—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}:`, err);
      }
    }
  }
});

// === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
bot.start();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω ‚úÖ');
