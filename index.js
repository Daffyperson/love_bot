// telegram_bot_fixed.js
require('dotenv').config();

const fs = require('fs');
const path = require('path');
const { Bot, Keyboard } = require('grammy');

const bot = new Bot(process.env.BOT_TOKEN);
const ADMIN_ID = Number(process.env.ADMIN_ID); // ‚Üê —Ç–æ–ª—å–∫–æ —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞



// –§–∞–π–ª—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è
const adviceCooldownFile = 'daily_advice.json';
const memeIndexFile = path.join(__dirname, 'meme_index.json');

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
let userAdviceTimestamps = fs.existsSync(adviceCooldownFile)
  ? JSON.parse(fs.readFileSync(adviceCooldownFile, 'utf8'))
  : {};

let userMemeIndex = fs.existsSync(memeIndexFile)
  ? JSON.parse(fs.readFileSync(memeIndexFile, 'utf8'))
  : {};

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
function saveAdviceTimestamps() {
  fs.writeFileSync(adviceCooldownFile, JSON.stringify(userAdviceTimestamps, null, 2));
}

function saveMemeIndex() {
  fs.writeFileSync(memeIndexFile, JSON.stringify(userMemeIndex, null, 2));
}

// –ú–µ–º—ã
const memePhotos = [
  'AgACAgIAAxkBAAPCaGjbFcVkDdfrkOVyMVzHs1xtDHEAAs7zMRsfj0hLcRah7yXIqmcBAAMCAAN4AAM2BA',
  'AgACAgIAAxkBAAPEaGjbN4perbA3ufmQs7vI3vI5u6wAAs_zMRsfj0hLUFgtq22NrUEBAAMCAAN4AAM2BA',
  'AgACAgIAAxkBAAPGaGjbVR96z4cluSJ-V0njKK0vrZIAAtHzMRsfj0hLl9XXoElGDokBAAMCAAN4AAM2BA',
  'AgACAgIAAxkBAAPKaGjbm9EZi1Zswp-2K6N6VUt-uZgAAtbzMRsfj0hL85IfFAW7GUoBAAMCAAN4AAM2BA',
  'AgACAgIAAxkBAAPMaGjbtQ0hNLzvq_hKWXvU5ISYAtkAAtrzMRsfj0hL9d1QT_O9i7MBAAMCAAN4AAM2BA',
  'AgACAgIAAxkBAAPOaGjb0XhKGijQ10qvtK4mbHQOU3UAAqDyMRu0nElLvzjPng13ZxkBAAMCAAN4AAM2BA'
];

// –ú–µ–Ω—é
const mainKeyboard = new Keyboard().text('–ë–µ—Å–ø–ª–∞—Ç–Ω–æüíì').row().text('–ü–ª–∞—Ç–Ω–æü´∞').resized();

const freeKeyboard = new Keyboard()
  .text('–ü–æ—Ü–µ–ª—É–π S ‚òÅ').row()
  .text('–ü–æ—Ü–µ–ª—É–π L üçì').row()
  .text('–ü–æ—Ü–µ–ª—É–π XXL üòà').row()
  .text('–°—Ä–æ—á–Ω—ã–µ –æ–±–Ω–∏–º–∞—à–∫–∏ üß∏').row()
  .text('–û–±—ä—è—Ç–∏—è XL ‚ù§Ô∏è').row()
  .text('–¢–µ—Å—Ç –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (—Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π) ‚ú®').row()
  .text('–ü—Ä–æ–≥–Ω–æ–∑ –∏ —Å–æ–≤–µ—Ç –Ω–∞ –¥–µ–Ω—å ü™Ñ').row()
  .text('üîô –ù–∞–∑–∞–¥')
  .resized();

const paidKeyboard = new Keyboard()
  .text('–ó–∞–≤–∞—Ä–∏—Ç—å —á–∞–π/–∫–æ—Ñ–µ ‚òïü´ñ').row()
  .text('–ë—ã—Å—Ç—Ä—ã–π –≤–∫—É—Å–Ω—ã–π –ø–µ—Ä–µ–∫—É—Å ü•ê').row()
  .text('–ú–∞—Å—Å–∞–∂ üíÜ').row()
  .text('–ú–µ–º—á–∏–∫ üêí').row()
  .text('üîô –ù–∞–∑–∞–¥')
  .resized();

// –ö–æ–º–∞–Ω–¥—ã
bot.command('start', async (ctx) => {
  await ctx.replyWithAnimation('CgACAgIAAxkBAAORaGjGMi2dp6DzsgZN-ccqxMOFA5IAAgV1AAIfj0hLA9gAARgwJwhCNgQ');
  await ctx.reply('–ü—Ä–∏–≤–µ—Ç, –ª—é–±–∏–º–∫–∞! üíì –í—ã–±–∏—Ä–∞–π:', {
    reply_markup: mainKeyboard
  });
});

bot.hears('–ë–µ—Å–ø–ª–∞—Ç–Ω–æüíì', async (ctx) => ctx.reply('–í—ã–±–∏—Ä–∞–π:', { reply_markup: freeKeyboard }));

bot.hears('–ü–ª–∞—Ç–Ω–æü´∞', async (ctx) => ctx.reply('–í–æ—Ç –ø–ª–∞—Ç–Ω—ã–µ –æ–ø—Ü–∏–∏:', { reply_markup: paidKeyboard }));

const notifyAdmin = async (ctx, choice) => {
  await bot.api.sendMessage(ADMIN_ID, `üîî –ù–æ–≤—ã–π –∑–∞–∫–∞–∑: ${choice} –æ—Ç @${ctx.from.username || ctx.from.first_name}`);
};

// –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –æ–ø—Ü–∏–∏
bot.hears([
  '–ü–æ—Ü–µ–ª—É–π S ‚òÅ',
  '–ü–æ—Ü–µ–ª—É–π L üçì',
  '–ü–æ—Ü–µ–ª—É–π XXL üòà',
  '–°—Ä–æ—á–Ω—ã–µ –æ–±–Ω–∏–º–∞—à–∫–∏ üß∏',
  '–û–±—ä—è—Ç–∏—è XL ‚ù§Ô∏è',
  '–ú–∞—Å—Å–∞–∂ üíÜ'
], async (ctx) => {
  const text = ctx.message.text;
  await ctx.reply('–ü—Ä–∏–Ω—è—Ç–æ! ‚ú®');
  await notifyAdmin(ctx, text);
});

bot.hears('–¢–µ—Å—Ç –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (—Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π) ‚ú®', async (ctx) => {
  await ctx.reply('–ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å?', {
    reply_markup: new Keyboard().text('–û—Ç–ª–∏—á–Ω–æ').row().text('–£—Å—Ç–∞–ª').row().text('–ü–µ—á–∞–ª—å–Ω–æ').row().text('üîô –ù–∞–∑–∞–¥').resized()
  });
});

bot.hears('–ü—Ä–æ–≥–Ω–æ–∑ –∏ —Å–æ–≤–µ—Ç –Ω–∞ –¥–µ–Ω—å ü™Ñ', async (ctx) => {
  const userId = ctx.from.id.toString();
  const now = Date.now();
  const last = userAdviceTimestamps[userId];

  if (last && now - last < 86400000) {
    const hoursLeft = Math.ceil((86400000 - (now - last)) / (60 * 60 * 1000));
    return ctx.reply(`üåô –£–∂–µ –ø–æ–ª—É—á–∞–ª —Å–æ–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ ${hoursLeft} —á.`);
  }

  const adviceList = [
    '–°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å –±—É–¥–µ—Ç –ø–æ–ª–æ–Ω –º–∞–ª–µ–Ω—å–∫–∏—Ö —á—É–¥–µ—Å.',
    '–¢—ã —Å–≤–µ—Ç–∏—à—å—Å—è –∏–∑–Ω—É—Ç—Ä–∏.',
    '–°–æ–ª–Ω—Ü–µ —Å–µ–≥–æ–¥–Ω—è –Ω–µ —Ç–æ–ª—å–∫–æ –≤ –Ω–µ–±–µ, –Ω–æ –∏ –≤ —Ç–µ–±–µ.',
    '–í–æ–∑–º–æ–∂–Ω—ã –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—è—Ç–Ω–æ—Å—Ç–∏.',
    '–£–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ.',
    '–í—ã–±–µ—Ä–∏ –∑–∞–±–æ—Ç—É –æ —Å–µ–±–µ.',
    '–§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ —Ö–æ—Ä–æ—à–µ–º.',
    '–¢–≤–æ—è —É–ª—ã–±–∫–∞ ‚Äî –º–∞–≥–Ω–∏—Ç –¥–ª—è –¥–æ–±—Ä–∞.',
    '–î–µ–Ω—å –±—É–¥–µ—Ç –∫–∞–∫ –ª—ë–≥–∫–∏–π –≤–µ—Ç–µ—Ä.'
  ];

  const message = adviceList[Math.floor(Math.random() * adviceList.length)];
  await ctx.reply(message);
  userAdviceTimestamps[userId] = now;
  saveAdviceTimestamps();
});

// –ü–ª–∞—Ç–Ω—ã–µ
bot.hears('–ó–∞–≤–∞—Ä–∏—Ç—å —á–∞–π/–∫–æ—Ñ–µ ‚òïü´ñ', async (ctx) => {
  await ctx.replyWithPhoto('AgACAgIAAxkBAAO-aGjRaZA5IBMNjLKdwPwwm7mkx14AApLzMRsfj0hL5u0B22DBZf0BAAMCAAN4AAM2BA');
  await ctx.reply('–° —Ç–µ–±—è 3 –ø–æ—Ü–µ–ª—É–π—á–∏–∫–∞ üíãüíãüíã –ß–∞–π –∏–ª–∏ –∫–æ—Ñ–µ?', {
    reply_markup: new Keyboard().text('–ß–∞–π üçµ').text('–ö–æ—Ñ–µ ‚òï').resized()
  });
  await notifyAdmin(ctx, '–ó–∞–≤–∞—Ä–∏—Ç—å —á–∞–π/–∫–æ—Ñ–µ ‚òïü´ñ');
});

bot.hears('–ë—ã—Å—Ç—Ä—ã–π –≤–∫—É—Å–Ω—ã–π –ø–µ—Ä–µ–∫—É—Å ü•ê', async (ctx) => {
  await ctx.replyWithPhoto('AgACAgIAAxkBAAPAaGjSNVbTEQABMkxakC447CTtEtA1AAII8TEbSUdIS_LpQaRT8nNjAQADAgADeAADNgQ');
  await ctx.reply('–≠—Ç–æ —Ç–µ–±–µ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å 5 –ø–æ—Ü–µ–ª—É–π—á–∏–∫–æ–≤ üíãüíãüíãüíãüíã');
  await notifyAdmin(ctx, '–ë—ã—Å—Ç—Ä—ã–π –≤–∫—É—Å–Ω—ã–π –ø–µ—Ä–µ–∫—É—Å ü•ê');
});

bot.hears('–ú–∞—Å—Å–∞–∂ üíÜ', async (ctx) => {
  await ctx.reply('–ù–∞—á–∏–Ω–∞—é –º—è–≥–∫–∏–π —Ä–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π –º–∞—Å—Å–∞–∂ üå∏üíÜ‚ú®');
  await notifyAdmin(ctx, '–ú–∞—Å—Å–∞–∂ üíÜ');
});

bot.hears('–ú–µ–º—á–∏–∫ üêí', async (ctx) => {
  const userId = ctx.from.id.toString();
  const index = userMemeIndex[userId] || 0;

  await ctx.replyWithPhoto(memePhotos[index]);
  await ctx.reply('–° —Ç–µ–±—è –æ–ø–ª–∞—Ç–∞ –≤ –≤–∏–¥–µ —É–ª—ã–±–∫–∏ üòä –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –µ—â—ë ‚Äî –∂–º–∏ –µ—â—ë —Ä–∞–∑!');

  userMemeIndex[userId] = (index + 1) % memePhotos.length;
  saveMemeIndex();
});

bot.hears(['–ß–∞–π üçµ', '–ö–æ—Ñ–µ ‚òï'], async (ctx) => {
  await ctx.reply('–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç! ‚ù§Ô∏è', {
    reply_markup: new Keyboard().text('üîô –ù–∞–∑–∞–¥').resized()
  });
});

bot.hears('üîô –ù–∞–∑–∞–¥', async (ctx) => {
  await ctx.reply('–¢—ã –≤–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üíì –í—ã–±–∏—Ä–∞–π —Å–Ω–æ–≤–∞:', {
    reply_markup: mainKeyboard
  });
});

const moodResponses = {
  '–û—Ç–ª–∏—á–Ω–æ': ['–¢—ã —Å—É–ø–µ—Ä! ‚òÄÔ∏è'],
  '–£—Å—Ç–∞–ª': ['–°–¥–µ–ª–∞–π –ø–∞—É–∑—É ‚òï'],
  '–ü–µ—á–∞–ª—å–Ω–æ': ['–¢—ã –Ω–µ –æ–¥–∏–Ω ‚ù§Ô∏è']
};

bot.hears(['–û—Ç–ª–∏—á–Ω–æ', '–£—Å—Ç–∞–ª', '–ü–µ—á–∞–ª—å–Ω–æ'], async (ctx) => {
  const mood = ctx.message.text;
  const replies = moodResponses[mood];
  await ctx.reply(replies[Math.floor(Math.random() * replies.length)], {
    reply_markup: new Keyboard().text('üîô –ù–∞–∑–∞–¥').resized()
  });
});

bot.command('pingme', async (ctx) => {
  try {
    await bot.api.sendMessage(ADMIN_ID, 'üîî –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–µ–±–µ –≤ –ª–∏—á–∫—É!');
    await ctx.reply('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ—é –ª–∏—á–∫—É!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ –õ–°:', error);
    await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–∏—á–∫—É.');
  }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ file_id
bot.on('message:animation', async (ctx) => {
  const fileId = ctx.message.animation.file_id;
  await ctx.reply(`file_id —ç—Ç–æ–π –≥–∏—Ñ–∫–∏: ${fileId}`);
});

bot.on('message:photo', async (ctx) => {
  const fileId = ctx.message.photo.at(-1).file_id;
  await ctx.reply(`file_id —ç—Ç–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏: ${fileId}`);
});

// === –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ —á–µ—Ä–µ–∑ —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è ===

let waitingForPost = false;

// –í—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞
bot.command('post', async (ctx) => {
  if (ctx.from.id !== ADMIN_ID) return;

  waitingForPost = true;
  await ctx.reply('üìù –í–≤–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å. –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å ‚Äî –Ω–∞–ø–∏—à–∏ "–æ—Ç–º–µ–Ω–∞".');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
bot.on('message:text', async (ctx) => {
  if (ctx.from.id !== ADMIN_ID) return;

  if (!waitingForPost) return;

  const text = ctx.message.text.trim();

  if (text.toLowerCase() === '–æ—Ç–º–µ–Ω–∞') {
    waitingForPost = false;
    return await ctx.reply('‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ. –¢—ã –≤—ã—à–µ–ª –∏–∑ —Ä–µ–∂–∏–º–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.');
  }

  try {
    await ctx.reply('‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è—é –ø–æ—Å—Ç...');
    // –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ—Å—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø–µ)
    await ctx.reply(text);
    waitingForPost = false;
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞:', err);
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ—Å—Ç–∞.');
  }
});


// –ó–∞–ø—É—Å–∫
bot.start();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω ‚úÖ');
